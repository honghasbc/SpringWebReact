<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/login**" access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/demo/**" access="permitAll" />
		
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<!-- <security:intercept-url pattern="/j_spring_security_check" access="ROLE_SUPERVISOR" />-->
		<form-login login-processing-url="/j_spring_security_check"
		    login-page="/login" 
		    default-target-url="/welcome" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<!-- <logout logout-success-url="/login?logout"  /> -->
		
		<logout logout-success-url="/login?logout" logout-url="/j_spring_security_logout" />
		<!-- enable csrf protection -->
		<csrf/>
	</http>
	<!-- Configure Spring Security -->
	<!-- Select users and user_roles from database -->
	<!-- <security:authentication-manager>
                Declare an authentication-manager to use a custom userDetailsService
                <security:authentication-provider user-service-ref="customUserDetailsService">
                    <security:password-encoder ref="passwordEncoder"/>
            </security:authentication-provider>
 
    </security:authentication-manager> -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select username,password, enabled from users where username=?"
				authorities-by-username-query=
					"select username, role from user_roles where username =?  "/>
			<password-encoder ref="passwordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	<beans:bean id ="passwordEncoder" class = "org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method = "getInstance" />
	<!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
       <constructor-arg name="strength" value="11"/>
    </bean> -->
</beans:beans>